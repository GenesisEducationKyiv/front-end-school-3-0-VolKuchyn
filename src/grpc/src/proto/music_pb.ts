// @generated by protoc-gen-es v2.6.0 with parameter "target=ts"
// @generated from file src/proto/music.proto (package music, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file src/proto/music.proto.
 */
export const file_src_proto_music: GenFile = /*@__PURE__*/
  fileDesc("ChVzcmMvcHJvdG8vbXVzaWMucHJvdG8SBW11c2ljIgcKBUVtcHR5IhcKCUlkUmVxdWVzdBIKCgJpZBgBIAEoCSIbCgtTbHVnUmVxdWVzdBIMCgRzbHVnGAEgASgJIiAKDkdlbnJlc1Jlc3BvbnNlEg4KBmdlbnJlcxgBIAMoCSKsAQoFVHJhY2sSCgoCaWQYASABKAkSDQoFdGl0bGUYAiABKAkSDgoGYXJ0aXN0GAMgASgJEg0KBWFsYnVtGAQgASgJEg4KBmdlbnJlcxgFIAMoCRIMCgRzbHVnGAYgASgJEhIKCmNvdmVySW1hZ2UYByABKAkSEQoJYXVkaW9GaWxlGAggASgJEhEKCWNyZWF0ZWRBdBgJIAEoCRIRCgl1cGRhdGVkQXQYCiABKAkidQoKVHJhY2tRdWVyeRIMCgRwYWdlGAEgASgFEg0KBWxpbWl0GAIgASgFEgwKBHNvcnQYAyABKAkSDQoFb3JkZXIYBCABKAkSDgoGc2VhcmNoGAUgASgJEg0KBWdlbnJlGAYgASgJEg4KBmFydGlzdBgHIAEoCSJxChFUcmFja0xpc3RSZXNwb25zZRIcCgZ0cmFja3MYASADKAsyDC5tdXNpYy5UcmFjaxINCgV0b3RhbBgCIAEoBRIMCgRwYWdlGAMgASgFEg0KBWxpbWl0GAQgASgFEhIKCnRvdGFsUGFnZXMYBSABKAUiZgoSQ3JlYXRlVHJhY2tSZXF1ZXN0Eg0KBXRpdGxlGAEgASgJEg4KBmFydGlzdBgCIAEoCRINCgVhbGJ1bRgDIAEoCRIOCgZnZW5yZXMYBCADKAkSEgoKY292ZXJJbWFnZRgFIAEoCSKFAQoSVXBkYXRlVHJhY2tSZXF1ZXN0EgoKAmlkGAEgASgJEg0KBXRpdGxlGAIgASgJEg4KBmFydGlzdBgDIAEoCRINCgVhbGJ1bRgEIAEoCRIOCgZnZW5yZXMYBSADKAkSEgoKY292ZXJJbWFnZRgGIAEoCRIRCglhdWRpb0ZpbGUYByABKAkiLAoNVHJhY2tSZXNwb25zZRIbCgV0cmFjaxgBIAEoCzIMLm11c2ljLlRyYWNrIiIKE0RlbGV0ZVRyYWNrc1JlcXVlc3QSCwoDaWRzGAEgAygJIjcKFERlbGV0ZVRyYWNrc1Jlc3BvbnNlEg8KB3N1Y2Nlc3MYASADKAkSDgoGZmFpbGVkGAIgAygJIj4KEFVwbG9hZEF1ZGlvQ2h1bmsSCgoCaWQYASABKAkSEAoIZmlsZW5hbWUYAiABKAkSDAoEZGF0YRgDIAEoDCI4ChNVcGxvYWRBdWRpb1Jlc3BvbnNlEg8KB21lc3NhZ2UYASABKAkSEAoIZmlsZU5hbWUYAiABKAkywwQKDE11c2ljU2VydmljZRIwCglHZXRHZW5yZXMSDC5tdXNpYy5FbXB0eRoVLm11c2ljLkdlbnJlc1Jlc3BvbnNlEjgKCUdldFRyYWNrcxIRLm11c2ljLlRyYWNrUXVlcnkaGC5tdXNpYy5UcmFja0xpc3RSZXNwb25zZRI6Cg5HZXRUcmFja0J5U2x1ZxISLm11c2ljLlNsdWdSZXF1ZXN0GhQubXVzaWMuVHJhY2tSZXNwb25zZRI+CgtDcmVhdGVUcmFjaxIZLm11c2ljLkNyZWF0ZVRyYWNrUmVxdWVzdBoULm11c2ljLlRyYWNrUmVzcG9uc2USPgoLVXBkYXRlVHJhY2sSGS5tdXNpYy5VcGRhdGVUcmFja1JlcXVlc3QaFC5tdXNpYy5UcmFja1Jlc3BvbnNlEi0KC0RlbGV0ZVRyYWNrEhAubXVzaWMuSWRSZXF1ZXN0GgwubXVzaWMuRW1wdHkSTwoURGVsZXRlTXVsdGlwbGVUcmFja3MSGi5tdXNpYy5EZWxldGVUcmFja3NSZXF1ZXN0GhsubXVzaWMuRGVsZXRlVHJhY2tzUmVzcG9uc2USSQoQVXBsb2FkVHJhY2tBdWRpbxIXLm11c2ljLlVwbG9hZEF1ZGlvQ2h1bmsaGi5tdXNpYy5VcGxvYWRBdWRpb1Jlc3BvbnNlKAESQAoQRGVsZXRlVHJhY2tBdWRpbxIQLm11c2ljLklkUmVxdWVzdBoaLm11c2ljLlVwbG9hZEF1ZGlvUmVzcG9uc2ViBnByb3RvMw");

/**
 * @generated from message music.Empty
 */
export type Empty = Message<"music.Empty"> & {
};

/**
 * Describes the message music.Empty.
 * Use `create(EmptySchema)` to create a new message.
 */
export const EmptySchema: GenMessage<Empty> = /*@__PURE__*/
  messageDesc(file_src_proto_music, 0);

/**
 * @generated from message music.IdRequest
 */
export type IdRequest = Message<"music.IdRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message music.IdRequest.
 * Use `create(IdRequestSchema)` to create a new message.
 */
export const IdRequestSchema: GenMessage<IdRequest> = /*@__PURE__*/
  messageDesc(file_src_proto_music, 1);

/**
 * @generated from message music.SlugRequest
 */
export type SlugRequest = Message<"music.SlugRequest"> & {
  /**
   * @generated from field: string slug = 1;
   */
  slug: string;
};

/**
 * Describes the message music.SlugRequest.
 * Use `create(SlugRequestSchema)` to create a new message.
 */
export const SlugRequestSchema: GenMessage<SlugRequest> = /*@__PURE__*/
  messageDesc(file_src_proto_music, 2);

/**
 * @generated from message music.GenresResponse
 */
export type GenresResponse = Message<"music.GenresResponse"> & {
  /**
   * @generated from field: repeated string genres = 1;
   */
  genres: string[];
};

/**
 * Describes the message music.GenresResponse.
 * Use `create(GenresResponseSchema)` to create a new message.
 */
export const GenresResponseSchema: GenMessage<GenresResponse> = /*@__PURE__*/
  messageDesc(file_src_proto_music, 3);

/**
 * @generated from message music.Track
 */
export type Track = Message<"music.Track"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: string artist = 3;
   */
  artist: string;

  /**
   * @generated from field: string album = 4;
   */
  album: string;

  /**
   * @generated from field: repeated string genres = 5;
   */
  genres: string[];

  /**
   * @generated from field: string slug = 6;
   */
  slug: string;

  /**
   * @generated from field: string coverImage = 7;
   */
  coverImage: string;

  /**
   * @generated from field: string audioFile = 8;
   */
  audioFile: string;

  /**
   * @generated from field: string createdAt = 9;
   */
  createdAt: string;

  /**
   * @generated from field: string updatedAt = 10;
   */
  updatedAt: string;
};

/**
 * Describes the message music.Track.
 * Use `create(TrackSchema)` to create a new message.
 */
export const TrackSchema: GenMessage<Track> = /*@__PURE__*/
  messageDesc(file_src_proto_music, 4);

/**
 * @generated from message music.TrackQuery
 */
export type TrackQuery = Message<"music.TrackQuery"> & {
  /**
   * @generated from field: int32 page = 1;
   */
  page: number;

  /**
   * @generated from field: int32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: string sort = 3;
   */
  sort: string;

  /**
   * @generated from field: string order = 4;
   */
  order: string;

  /**
   * @generated from field: string search = 5;
   */
  search: string;

  /**
   * @generated from field: string genre = 6;
   */
  genre: string;

  /**
   * @generated from field: string artist = 7;
   */
  artist: string;
};

/**
 * Describes the message music.TrackQuery.
 * Use `create(TrackQuerySchema)` to create a new message.
 */
export const TrackQuerySchema: GenMessage<TrackQuery> = /*@__PURE__*/
  messageDesc(file_src_proto_music, 5);

/**
 * @generated from message music.TrackListResponse
 */
export type TrackListResponse = Message<"music.TrackListResponse"> & {
  /**
   * @generated from field: repeated music.Track tracks = 1;
   */
  tracks: Track[];

  /**
   * @generated from field: int32 total = 2;
   */
  total: number;

  /**
   * @generated from field: int32 page = 3;
   */
  page: number;

  /**
   * @generated from field: int32 limit = 4;
   */
  limit: number;

  /**
   * @generated from field: int32 totalPages = 5;
   */
  totalPages: number;
};

/**
 * Describes the message music.TrackListResponse.
 * Use `create(TrackListResponseSchema)` to create a new message.
 */
export const TrackListResponseSchema: GenMessage<TrackListResponse> = /*@__PURE__*/
  messageDesc(file_src_proto_music, 6);

/**
 * @generated from message music.CreateTrackRequest
 */
export type CreateTrackRequest = Message<"music.CreateTrackRequest"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string artist = 2;
   */
  artist: string;

  /**
   * @generated from field: string album = 3;
   */
  album: string;

  /**
   * @generated from field: repeated string genres = 4;
   */
  genres: string[];

  /**
   * @generated from field: string coverImage = 5;
   */
  coverImage: string;
};

/**
 * Describes the message music.CreateTrackRequest.
 * Use `create(CreateTrackRequestSchema)` to create a new message.
 */
export const CreateTrackRequestSchema: GenMessage<CreateTrackRequest> = /*@__PURE__*/
  messageDesc(file_src_proto_music, 7);

/**
 * @generated from message music.UpdateTrackRequest
 */
export type UpdateTrackRequest = Message<"music.UpdateTrackRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: string artist = 3;
   */
  artist: string;

  /**
   * @generated from field: string album = 4;
   */
  album: string;

  /**
   * @generated from field: repeated string genres = 5;
   */
  genres: string[];

  /**
   * @generated from field: string coverImage = 6;
   */
  coverImage: string;

  /**
   * @generated from field: string audioFile = 7;
   */
  audioFile: string;
};

/**
 * Describes the message music.UpdateTrackRequest.
 * Use `create(UpdateTrackRequestSchema)` to create a new message.
 */
export const UpdateTrackRequestSchema: GenMessage<UpdateTrackRequest> = /*@__PURE__*/
  messageDesc(file_src_proto_music, 8);

/**
 * @generated from message music.TrackResponse
 */
export type TrackResponse = Message<"music.TrackResponse"> & {
  /**
   * @generated from field: music.Track track = 1;
   */
  track?: Track;
};

/**
 * Describes the message music.TrackResponse.
 * Use `create(TrackResponseSchema)` to create a new message.
 */
export const TrackResponseSchema: GenMessage<TrackResponse> = /*@__PURE__*/
  messageDesc(file_src_proto_music, 9);

/**
 * @generated from message music.DeleteTracksRequest
 */
export type DeleteTracksRequest = Message<"music.DeleteTracksRequest"> & {
  /**
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];
};

/**
 * Describes the message music.DeleteTracksRequest.
 * Use `create(DeleteTracksRequestSchema)` to create a new message.
 */
export const DeleteTracksRequestSchema: GenMessage<DeleteTracksRequest> = /*@__PURE__*/
  messageDesc(file_src_proto_music, 10);

/**
 * @generated from message music.DeleteTracksResponse
 */
export type DeleteTracksResponse = Message<"music.DeleteTracksResponse"> & {
  /**
   * @generated from field: repeated string success = 1;
   */
  success: string[];

  /**
   * @generated from field: repeated string failed = 2;
   */
  failed: string[];
};

/**
 * Describes the message music.DeleteTracksResponse.
 * Use `create(DeleteTracksResponseSchema)` to create a new message.
 */
export const DeleteTracksResponseSchema: GenMessage<DeleteTracksResponse> = /*@__PURE__*/
  messageDesc(file_src_proto_music, 11);

/**
 * @generated from message music.UploadAudioChunk
 */
export type UploadAudioChunk = Message<"music.UploadAudioChunk"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string filename = 2;
   */
  filename: string;

  /**
   * @generated from field: bytes data = 3;
   */
  data: Uint8Array;
};

/**
 * Describes the message music.UploadAudioChunk.
 * Use `create(UploadAudioChunkSchema)` to create a new message.
 */
export const UploadAudioChunkSchema: GenMessage<UploadAudioChunk> = /*@__PURE__*/
  messageDesc(file_src_proto_music, 12);

/**
 * @generated from message music.UploadAudioResponse
 */
export type UploadAudioResponse = Message<"music.UploadAudioResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: string fileName = 2;
   */
  fileName: string;
};

/**
 * Describes the message music.UploadAudioResponse.
 * Use `create(UploadAudioResponseSchema)` to create a new message.
 */
export const UploadAudioResponseSchema: GenMessage<UploadAudioResponse> = /*@__PURE__*/
  messageDesc(file_src_proto_music, 13);

/**
 * @generated from service music.MusicService
 */
export const MusicService: GenService<{
  /**
   * @generated from rpc music.MusicService.GetGenres
   */
  getGenres: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GenresResponseSchema;
  },
  /**
   * @generated from rpc music.MusicService.GetTracks
   */
  getTracks: {
    methodKind: "unary";
    input: typeof TrackQuerySchema;
    output: typeof TrackListResponseSchema;
  },
  /**
   * @generated from rpc music.MusicService.GetTrackBySlug
   */
  getTrackBySlug: {
    methodKind: "unary";
    input: typeof SlugRequestSchema;
    output: typeof TrackResponseSchema;
  },
  /**
   * @generated from rpc music.MusicService.CreateTrack
   */
  createTrack: {
    methodKind: "unary";
    input: typeof CreateTrackRequestSchema;
    output: typeof TrackResponseSchema;
  },
  /**
   * @generated from rpc music.MusicService.UpdateTrack
   */
  updateTrack: {
    methodKind: "unary";
    input: typeof UpdateTrackRequestSchema;
    output: typeof TrackResponseSchema;
  },
  /**
   * @generated from rpc music.MusicService.DeleteTrack
   */
  deleteTrack: {
    methodKind: "unary";
    input: typeof IdRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc music.MusicService.DeleteMultipleTracks
   */
  deleteMultipleTracks: {
    methodKind: "unary";
    input: typeof DeleteTracksRequestSchema;
    output: typeof DeleteTracksResponseSchema;
  },
  /**
   * @generated from rpc music.MusicService.UploadTrackAudio
   */
  uploadTrackAudio: {
    methodKind: "client_streaming";
    input: typeof UploadAudioChunkSchema;
    output: typeof UploadAudioResponseSchema;
  },
  /**
   * @generated from rpc music.MusicService.DeleteTrackAudio
   */
  deleteTrackAudio: {
    methodKind: "unary";
    input: typeof IdRequestSchema;
    output: typeof UploadAudioResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_src_proto_music, 0);

